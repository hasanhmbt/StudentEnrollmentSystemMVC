@model IEnumerable<Student>

@{
    ViewBag.Title = "Students";
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
}

<div class="container-fluid">
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Students</h6>
            <a asp-action="Create" class="btn btn-primary">Create New</a>
        </div>

        <div class="card-body">
            <!-- Search Form -->
            <form method="get" asp-action="Index" class="form-inline mb-3">
                <input type="text" name="searchQuery" value="@ViewBag.CurrentSearch" placeholder="Search by name or email" class="form-control mr-2">
                <button type="submit" class="btn btn-primary">Search</button>
            </form>

            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Enrollment Date</th>
                            <th>Enrollments</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var student in Model)
                        {
                            <tr>
                                <td>@student.Name</td>
                                <td>@student.Email</td>
                                <td>@student.EnrollmentDate.ToString("MM/dd/yyyy")</td>
                                <td>
                                    @if (student.Enrollments != null && student.Enrollments.Any())
                                    {
                                        var courses = string.Join(", ", student.Enrollments
                                        .Where(e => !string.IsNullOrEmpty(e.Course?.Title))
                                        .Select(e => e.Course.Title));
                                        @(courses ?? "None")
                                    }
                                    else
                                    {
                                        @:None
                                    }
                                </td>
                                <td class="text-center">
                                    <a asp-action="Edit" asp-route-id="@student.Id" class="btn btn-sm btn-primary" aria-label="Edit @student.Name">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@student.Id" class="btn btn-sm btn-info" aria-label="View details of @student.Name">
                                        <i class="fas fa-info-circle"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@student.Id" class="btn btn-sm btn-danger" aria-label="Delete @student.Name">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <!-- Pagination Controls -->
                <nav>
                    <ul class="pagination">
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" 
                                asp-action="Index" 
                                asp-route-searchQuery="@ViewBag.CurrentSearch" 
                                asp-route-pageNumber="@(currentPage - 1)">Previous</a>
                            </li>
                        }
                        @for (var i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" 
                                asp-action="Index" 
                                asp-route-searchQuery="@ViewBag.CurrentSearch" 
                                asp-route-pageNumber="@i">@i</a>
                            </li>
                        }
                        @if (currentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" 
                                asp-action="Index" 
                                asp-route-searchQuery="@ViewBag.CurrentSearch" 
                                asp-route-pageNumber="@(currentPage + 1)">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>
